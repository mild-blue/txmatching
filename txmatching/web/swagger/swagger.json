{
    "swagger": "2.0",
    "basePath": "/",
    "paths": {
        "/v1/crossmatch/do-crossmatch": {
            "post": {
                "responses": {
                    "501": {
                        "description": "The feature is not implemented yet.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CrossmatchOutput"
                        }
                    }
                },
                "description": "Perform crossmatch test between donor HLA typing and recipient antibodies.",
                "operationId": "post_do_crossmatch",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CrossmatchInput"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "crossmatch"
                ]
            }
        },
        "/v1/optimizer": {
            "post": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Endpoint that calculates matchings from compatibility graph and configuration",
                        "schema": {
                            "$ref": "#/definitions/OptimizerReturn"
                        }
                    }
                },
                "operationId": "post_optimize",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OptimizerRequest"
                        }
                    }
                ],
                "tags": [
                    "optimizer"
                ]
            }
        },
        "/v1/optimizer/export/{txm_event_id}/{config_id}": {
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Endpoint that exports data from TXM that can be input into optimization module",
                        "schema": {
                            "$ref": "#/definitions/OptimizerRequest"
                        }
                    }
                },
                "operationId": "get_optimize",
                "parameters": [
                    {
                        "name": "txm_event_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Id of txm event chosen"
                    },
                    {
                        "name": "config_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Configuration ID or \"default\".",
                        "default": "default"
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "optimizer"
                ]
            }
        },
        "/v1/public/patient-upload": {
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PatientUploadSuccessResponse"
                        }
                    }
                },
                "description": "This endpoint allows the country editor to upload patient data for given TXM event. TXM event name has to be provided by an ADMIN. You can either add patients to the current dataset or remove all patients from respective country in case there were any. To access this endpoint one has to have credentials to service account and obtain jwt token via the login endpoint.",
                "operationId": "put_txm_event_upload_patients",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UploadPatients"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "public"
                ]
            }
        },
        "/v1/service/status": {
            "get": {
                "responses": {
                    "503": {
                        "description": "Database service is unavailable.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Returns ok if the service is healthy.",
                        "schema": {
                            "$ref": "#/definitions/ServiceStatus"
                        }
                    }
                },
                "operationId": "get_status",
                "tags": [
                    "service"
                ]
            }
        },
        "/v1/service/version": {
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Returns version of the code",
                        "schema": {
                            "$ref": "#/definitions/Version"
                        }
                    }
                },
                "operationId": "get_version",
                "tags": [
                    "service"
                ]
            }
        },
        "/v1/txm-event": {
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "List of allowed txmEvents.",
                        "schema": {
                            "$ref": "#/definitions/TxmEvents"
                        }
                    }
                },
                "description": "Get list of allowed txm txmEvents for the logged user.",
                "operationId": "get_txm_event_api",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "txm-event"
                ]
            },
            "post": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "409": {
                        "description": "Non-unique patients provided.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "201": {
                        "description": "Returns the newly created TXM event object.",
                        "schema": {
                            "$ref": "#/definitions/TxmEvent"
                        }
                    }
                },
                "description": "Endpoint that lets an ADMIN create a new TXM event. The ADMIN should specify TXM event name.",
                "operationId": "post_txm_event_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/NewTxmEvent"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "txm-event"
                ]
            }
        },
        "/v1/txm-event/copy": {
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Patients were successfully copied. List of new patients ids: ",
                        "schema": {
                            "$ref": "#/definitions/CopyPatients"
                        }
                    }
                },
                "description": "Copy list of patients from one event to the other",
                "operationId": "put_txm_copy_patients_between_events_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/TxmEventCopy"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "txm-event"
                ]
            }
        },
        "/v1/txm-event/default": {
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Default event.",
                        "schema": {
                            "$ref": "#/definitions/TxmEvent"
                        }
                    }
                },
                "description": "Get default event",
                "operationId": "get_txm_default_event_api",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "txm-event"
                ]
            },
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "409": {
                        "description": "Non-unique patients provided.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Returns the default event.",
                        "schema": {
                            "$ref": "#/definitions/TxmEvent"
                        }
                    }
                },
                "description": "Set default txm event for the logged user.",
                "operationId": "put_txm_default_event_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DefaultTxmEvent"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "txm-event"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}": {
            "delete": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Returns status code representing result of TXM event object deletion."
                    }
                },
                "description": "Endpoint that lets an ADMIN delete existing TXM event.",
                "operationId": "delete_txm_event_delete_api",
                "parameters": [
                    {
                        "name": "txm_event_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Id of the TXM event to be deleted.",
                        "default": 2
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "txm-event"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/configuration/find-or-create-config": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "If config exists, this endpoint returns config id, else creates new config and then returns config id.",
                        "schema": {
                            "$ref": "#/definitions/ConfigurationId"
                        }
                    }
                },
                "operationId": "post_configuration_id_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Configuration"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "configuration"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/configuration/set-default": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Whether the update was successful",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    }
                },
                "description": "Set default configuration id for the txm event.",
                "operationId": "put_default_configuration_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Identifier"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "configuration"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/configuration/{config_id}": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Returns the specified matching configuration for the current user.",
                        "schema": {
                            "$ref": "#/definitions/Configuration"
                        }
                    }
                },
                "operationId": "get_configuration_api",
                "parameters": [
                    {
                        "name": "config_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Configuration ID or \"default\".",
                        "default": "default"
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "configuration"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/export": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Exported patients DTO, Ready to be uploaded to some other event",
                        "schema": {
                            "$ref": "#/definitions/UploadPatients"
                        }
                    }
                },
                "description": "Export patients from provided country and TXM event. Make the file ready to be uploaded again with already new txm event name ready.",
                "operationId": "post_txm_export_event_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/TxmEventExport"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "txm-event"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/matching/calculate-for-config/{config_id}": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "List of all matchings for given configuration.",
                        "schema": {
                            "$ref": "#/definitions/CalculatedMatchings"
                        }
                    }
                },
                "operationId": "get_calculate_from_config",
                "parameters": [
                    {
                        "name": "config_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Configuration ID or \"default\".",
                        "default": "default"
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "matching"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/patients/add-patients-file": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/PatientUploadSuccessResponse"
                        }
                    }
                },
                "operationId": "put_add_patients_file",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "Excel file to upload data.",
                        "required": true,
                        "type": "file"
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "patients"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/patients/configs/{config_id}": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "List of donors and list of recipients.",
                        "schema": {
                            "$ref": "#/definitions/Patients"
                        }
                    }
                },
                "description": "Get all patients for the given txm event.  Example: /patients?include-antibodies-raw",
                "operationId": "get_all_patients",
                "parameters": [
                    {
                        "name": "config_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Configuration ID or \"default\".",
                        "default": "default"
                    },
                    {
                        "description": "Specify to include raw antibodies as well. By default, raw antibodies are not included. Example: ?include-antibodies-raw",
                        "type": "boolean",
                        "required": false,
                        "name": "include-antibodies-raw",
                        "in": "query"
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "patients"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/patients/configs/{config_id}/donor": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Updated donor.",
                        "schema": {
                            "$ref": "#/definitions/UpdatedDonor"
                        }
                    }
                },
                "operationId": "put_alter_donor",
                "parameters": [
                    {
                        "name": "config_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Configuration ID or \"default\".",
                        "default": "default"
                    },
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DonorModelToUpdate"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "patients"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/patients/confirm-warning/{parsing_issue_id}": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Issue confirmed successfully.",
                        "schema": {
                            "$ref": "#/definitions/ParsingIssue"
                        }
                    }
                },
                "description": "Confirm a warning.",
                "operationId": "put_confirm_warning",
                "parameters": [
                    {
                        "name": "parsing_issue_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Id of the warning to be confirmed"
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "patients"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/patients/pairs": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Added new donor (possibly with recipient)",
                        "schema": {
                            "$ref": "#/definitions/PatientUploadSuccessResponse"
                        }
                    }
                },
                "operationId": "post_donor_recipient_pairs",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DonorModelPairIn"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "patients"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/patients/pairs/{donor_db_id}": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "delete": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Returns status code representing result of donor recipient pair object deletion."
                    }
                },
                "description": "Delete existing donor recipient pair.",
                "operationId": "delete_donor_recipient_pair",
                "parameters": [
                    {
                        "name": "donor_db_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Donor id that will be deleted including its recipient if there is any"
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "patients"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/patients/recipient": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Updated recipient.",
                        "schema": {
                            "$ref": "#/definitions/UpdatedRecipient"
                        }
                    }
                },
                "operationId": "put_alter_recipient",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/RecipientModelToUpdate"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "patients"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/patients/recipient-compatibility-info/{recipient_id}/{config_id}": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "cPRA [%] is successfully calculated",
                        "schema": {
                            "$ref": "#/definitions/RecipientCompatibilityInfoJson"
                        }
                    }
                },
                "description": "Endpoint returns recipients cPRA (in %) and list of suitable donors ids.",
                "operationId": "get_calculate_recipient_cpra",
                "parameters": [
                    {
                        "name": "recipient_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "the id of the recipient for whom we calculate cPRA"
                    },
                    {
                        "name": "config_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Configuration ID or \"default\".",
                        "default": "default"
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "patients"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/patients/recompute-parsing": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Returns the recomputation statistics.",
                        "schema": {
                            "$ref": "#/definitions/PatientsRecomputeParsingSuccess"
                        }
                    }
                },
                "description": "Endpoint that lets an ADMIN recompute parsed antigens and antibodies for all patients in the given txm event.",
                "operationId": "post_recompute_parsing",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "patients"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/patients/unconfirm-warning/{parsing_issue_id}": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Issue unconfirmed successfully.",
                        "schema": {
                            "$ref": "#/definitions/ParsingIssue"
                        }
                    }
                },
                "description": "Unconfirm a warning.",
                "operationId": "put_unconfirm_warning",
                "parameters": [
                    {
                        "name": "parsing_issue_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Id of the warning to be unconfirmed"
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "patients"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/reports/configs/{config_id}/matchings/{matching_id}/pdf": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "404": {
                        "description": "Matching not found.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Generates PDF report."
                    }
                },
                "operationId": "get_matching_report",
                "parameters": [
                    {
                        "name": "config_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Configuration ID or \"default\".",
                        "default": "default"
                    },
                    {
                        "name": "matching_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Id of matching that was chosen"
                    },
                    {
                        "description": "If set, the resulting report will contain section with patients details. Example: ?includePatientsSection",
                        "type": "boolean",
                        "required": false,
                        "name": "includePatientsSection",
                        "in": "query"
                    },
                    {
                        "description": "Number of matchings with lower score than chosen to include in report. Example: matchingsBelowChosen=42",
                        "type": "integer",
                        "required": true,
                        "name": "matchingsBelowChosen",
                        "in": "query"
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "reports"
                ]
            }
        },
        "/v1/txm-event/{txm_event_id}/reports/configs/{config_id}/patients/xlsx": {
            "parameters": [
                {
                    "name": "txm_event_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "404": {
                        "description": "Matching not found.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Generates XLSX report."
                    }
                },
                "operationId": "get_patients_xls_report",
                "parameters": [
                    {
                        "name": "config_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Configuration ID or \"default\".",
                        "default": "default"
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "reports"
                ]
            }
        },
        "/v1/user/authentik-login": {
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    }
                },
                "operationId": "get_authentik_login",
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/change-password": {
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Whether the password was changed successfully.",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    }
                },
                "operationId": "put_password_change_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PasswordChange"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/login": {
            "post": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Login successful. JWT generated. User must attach the token to every request in the \"Authorization\" header with the prefix \"Bearer\". Example: \"Authorization: Bearer some_token\", where some_token is the token received in the response.",
                        "schema": {
                            "$ref": "#/definitions/LoginSuccessResponse"
                        }
                    }
                },
                "description": "Endpoint to be used for login of users. Returns JWT. This JWT serves two purposes: in the case of normal accounts it can be used to obtain OTP at the /otp endpoint; in the case of service accounts it can be directly used to access /public/patient-upload endpoint",
                "operationId": "post_login_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserLogin"
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/otp": {
            "post": {
                "responses": {
                    "503": {
                        "description": "It was not possible to reach the SMS gate, thus the one time password could not be send.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "OTP validation was successful. JWT generated.",
                        "schema": {
                            "$ref": "#/definitions/LoginSuccessResponse"
                        }
                    }
                },
                "operationId": "post_otp_login_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OtpLogin"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "user"
                ]
            },
            "put": {
                "responses": {
                    "503": {
                        "description": "It was not possible to reach the SMS gate, thus the one time password could not be send.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Whether the new OTP was generated and sent.",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    }
                },
                "operationId": "put_otp_login_api",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/refresh-token": {
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Token successfully refreshed.",
                        "schema": {
                            "$ref": "#/definitions/LoginSuccessResponse"
                        }
                    }
                },
                "operationId": "get_refresh_token_api",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/register": {
            "post": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Detailed info about the registered user.",
                        "schema": {
                            "$ref": "#/definitions/UserRegistrationOut"
                        }
                    }
                },
                "operationId": "post_registration_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserRegistration"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/reset-password": {
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Whether the password reset was successful.",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    }
                },
                "operationId": "put_reset_password",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ResetPassword"
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/{email}/reset-password-token": {
            "parameters": [
                {
                    "name": "email",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Returns reset token.",
                        "schema": {
                            "$ref": "#/definitions/ResetRequestResponse"
                        }
                    }
                },
                "operationId": "get_request_reset",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        }
    },
    "info": {
        "title": "API",
        "version": "1.0"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "bearer": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization"
        }
    },
    "tags": [
        {
            "name": "public"
        },
        {
            "name": "user"
        },
        {
            "name": "service"
        },
        {
            "name": "optimizer"
        },
        {
            "name": "matching"
        },
        {
            "name": "patients"
        },
        {
            "name": "configuration"
        },
        {
            "name": "reports"
        },
        {
            "name": "txm-event"
        },
        {
            "name": "crossmatch"
        }
    ],
    "definitions": {
        "AllMessages": {
            "properties": {
                "infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParsingIssue"
                    }
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParsingIssue"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParsingIssue"
                    }
                }
            },
            "type": "object"
        },
        "AllTransplantMessages": {
            "properties": {
                "infos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "AntibodiesPerGroup": {
            "required": [
                "hla_antibody_list",
                "hla_group"
            ],
            "properties": {
                "hla_group": {
                    "type": "string",
                    "example": "A",
                    "enum": [
                        "A",
                        "B",
                        "DRB1",
                        "CW",
                        "DP",
                        "DQ",
                        "OTHER_DR"
                    ]
                },
                "hla_antibody_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HlaAntibody"
                    }
                }
            },
            "type": "object"
        },
        "AntibodyMatch": {
            "required": [
                "hla_antibody",
                "match_type"
            ],
            "properties": {
                "hla_antibody": {
                    "$ref": "#/definitions/HlaAntibody"
                },
                "match_type": {
                    "type": "string",
                    "example": "SPLIT",
                    "enum": [
                        "SPLIT",
                        "BROAD",
                        "HIGH_RES",
                        "NONE",
                        "UNDECIDABLE",
                        "HIGH_RES_WITH_SPLIT",
                        "HIGH_RES_WITH_BROAD",
                        "THEORETICAL"
                    ]
                }
            },
            "type": "object"
        },
        "AntibodyMatchForHLAType": {
            "required": [
                "hla_type"
            ],
            "properties": {
                "hla_type": {
                    "$ref": "#/definitions/HlaType"
                },
                "antibody_matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AntibodyMatch"
                    }
                }
            },
            "type": "object"
        },
        "AntigenMatch": {
            "required": [
                "hla_type",
                "match_type"
            ],
            "properties": {
                "hla_type": {
                    "$ref": "#/definitions/HlaType"
                },
                "match_type": {
                    "type": "string",
                    "example": "SPLIT",
                    "enum": [
                        "SPLIT",
                        "BROAD",
                        "HIGH_RES",
                        "NONE"
                    ]
                }
            },
            "type": "object"
        },
        "BloodGroupEnum": {
            "enum": [
                "A",
                "B",
                "AB",
                "0"
            ],
            "type": "string"
        },
        "CalculatedMatchings": {
            "required": [
                "calculated_matchings",
                "config_id"
            ],
            "properties": {
                "calculated_matchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Matching"
                    }
                },
                "number_of_possible_transplants": {
                    "type": "integer"
                },
                "number_of_possible_recipients": {
                    "type": "integer"
                },
                "config_id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompatibilityGraphEntry": {
            "required": [
                "donor_id",
                "recipient_id"
            ],
            "properties": {
                "donor_id": {
                    "type": "integer",
                    "example": 1
                },
                "recipient_id": {
                    "type": "integer",
                    "example": 2
                },
                "weights": {
                    "type": "object",
                    "example": {
                        "hla_compatibility_score": 17,
                        "donor_age_difference": 1
                    }
                }
            },
            "type": "object"
        },
        "Configuration": {
            "required": [
                "blood_group_compatibility_bonus",
                "forbidden_country_combinations",
                "hla_crossmatch_level",
                "manual_donor_recipient_scores",
                "max_cycle_length",
                "max_cycles_in_all_solutions_solver",
                "max_debt_for_country",
                "max_debt_for_country_for_blood_group_zero",
                "max_matchings_in_all_solutions_solver",
                "max_matchings_in_ilp_solver",
                "max_matchings_to_show_to_viewer",
                "max_number_of_distinct_countries_in_round",
                "max_number_of_dynamic_constrains_ilp_solver",
                "max_number_of_matchings",
                "max_sequence_length",
                "minimum_total_score",
                "require_better_match_in_compatibility_index",
                "require_better_match_in_compatibility_index_or_blood_group",
                "require_compatible_blood_group",
                "required_patient_db_ids",
                "scorer_constructor_name",
                "solver_constructor_name",
                "use_binary_scoring",
                "use_high_resolution"
            ],
            "properties": {
                "scorer_constructor_name": {
                    "example": "SplitScorer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Scorer"
                        }
                    ]
                },
                "solver_constructor_name": {
                    "example": "AllSolutionsSolver",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Solver"
                        }
                    ]
                },
                "require_compatible_blood_group": {
                    "type": "boolean",
                    "example": false
                },
                "minimum_total_score": {
                    "type": "number",
                    "example": 0.0
                },
                "require_better_match_in_compatibility_index": {
                    "type": "boolean",
                    "example": false
                },
                "require_better_match_in_compatibility_index_or_blood_group": {
                    "type": "boolean",
                    "example": false
                },
                "blood_group_compatibility_bonus": {
                    "type": "number",
                    "example": 0.0
                },
                "use_binary_scoring": {
                    "type": "boolean",
                    "example": false
                },
                "max_cycle_length": {
                    "type": "integer",
                    "example": 4
                },
                "max_sequence_length": {
                    "type": "integer",
                    "example": 4
                },
                "max_number_of_distinct_countries_in_round": {
                    "type": "integer",
                    "example": 3
                },
                "required_patient_db_ids": {
                    "type": "array",
                    "example": [],
                    "items": {
                        "type": "integer"
                    }
                },
                "use_high_resolution": {
                    "type": "boolean",
                    "example": true
                },
                "hla_crossmatch_level": {
                    "$ref": "#/definitions/HlaCrossmatchLevel"
                },
                "forbidden_country_combinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForbiddenCountryCombination"
                    }
                },
                "manual_donor_recipient_scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ManualRecipientDonorScore"
                    }
                },
                "max_matchings_to_show_to_viewer": {
                    "type": "integer",
                    "example": 0
                },
                "max_number_of_matchings": {
                    "type": "integer",
                    "example": 5
                },
                "max_matchings_in_all_solutions_solver": {
                    "type": "integer",
                    "example": 20
                },
                "max_cycles_in_all_solutions_solver": {
                    "type": "integer",
                    "example": 1000000
                },
                "max_debt_for_country": {
                    "type": "integer",
                    "example": 3
                },
                "max_debt_for_country_for_blood_group_zero": {
                    "type": "integer",
                    "example": 3
                },
                "max_number_of_dynamic_constrains_ilp_solver": {
                    "type": "integer",
                    "example": 100
                },
                "max_matchings_in_ilp_solver": {
                    "type": "integer",
                    "example": 20
                }
            },
            "type": "object"
        },
        "ConfigurationId": {
            "required": [
                "config_id"
            ],
            "properties": {
                "config_id": {
                    "type": "integer",
                    "example": 2
                }
            },
            "type": "object"
        },
        "CopyPatients": {
            "required": [
                "new_donor_ids"
            ],
            "properties": {
                "new_donor_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "Country": {
            "required": [
                "country_code",
                "donor_count",
                "recipient_count"
            ],
            "properties": {
                "country_code": {
                    "type": "string"
                },
                "donor_count": {
                    "type": "integer"
                },
                "recipient_count": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CountryCode": {
            "enum": [
                "CZE",
                "AUT",
                "AUT_2",
                "ISR",
                "ABW",
                "AFG",
                "AGO",
                "AIA",
                "ALA",
                "ALB",
                "AND",
                "ARE",
                "ARG",
                "ARM",
                "ASM",
                "ATA",
                "ATF",
                "ATG",
                "AUS",
                "AZE",
                "BDI",
                "BEL",
                "BEL_2",
                "BEN",
                "BES",
                "BFA",
                "BGD",
                "BGR",
                "BHR",
                "BHS",
                "BIH",
                "BLM",
                "BLR",
                "BLZ",
                "BMU",
                "BOL",
                "BRA",
                "BRB",
                "BRN",
                "BTN",
                "BVT",
                "BWA",
                "CAF",
                "CAN",
                "CCK",
                "CIV",
                "CMR",
                "COD",
                "COG",
                "COK",
                "COL",
                "COM",
                "CPV",
                "CRI",
                "CUB",
                "CUW",
                "CXR",
                "CYM",
                "CYP",
                "DEU",
                "DJI",
                "DMA",
                "DNK",
                "DOM",
                "DZA",
                "ECU",
                "EGY",
                "ERI",
                "ESH",
                "ESP",
                "EST",
                "ETH",
                "FIN",
                "FJI",
                "FLK",
                "FRA",
                "FRO",
                "FSM",
                "GAB",
                "GBR",
                "GEO",
                "GGY",
                "GHA",
                "GIB",
                "GIN",
                "GLP",
                "GMB",
                "GNB",
                "GNQ",
                "GRC",
                "GRD",
                "GRL",
                "GTM",
                "GUF",
                "GUM",
                "GUY",
                "HKG",
                "HMD",
                "HND",
                "HRV",
                "HTI",
                "HUN",
                "CHE",
                "CHL",
                "CHN",
                "IDN",
                "IMN",
                "IND",
                "IOT",
                "IRL",
                "IRN",
                "IRQ",
                "ISL",
                "ITA",
                "JAM",
                "JEY",
                "JOR",
                "JPN",
                "KAZ",
                "KEN",
                "KGZ",
                "KHM",
                "KIR",
                "KNA",
                "KOR",
                "KWT",
                "LAO",
                "LBN",
                "LBR",
                "LBY",
                "LCA",
                "LIE",
                "LKA",
                "LSO",
                "LTU",
                "LUX",
                "LVA",
                "MAC",
                "MAF",
                "MAR",
                "MCO",
                "MDA",
                "MDG",
                "MDV",
                "MEX",
                "MHL",
                "MKD",
                "MLI",
                "MLT",
                "MMR",
                "MNE",
                "MNG",
                "MNP",
                "MOZ",
                "MRT",
                "MSR",
                "MTQ",
                "MUS",
                "MWI",
                "MYS",
                "MYT",
                "NAM",
                "NCL",
                "NER",
                "NFK",
                "NGA",
                "NIC",
                "NIU",
                "NLD",
                "NOR",
                "NPL",
                "NRU",
                "NZL",
                "OMN",
                "PAK",
                "PAN",
                "PCN",
                "PER",
                "PHL",
                "PLW",
                "PNG",
                "POL",
                "PRI",
                "PRK",
                "PRT",
                "PRY",
                "PSE",
                "PYF",
                "QAT",
                "REU",
                "ROU",
                "RUS",
                "RWA",
                "SAU",
                "SDN",
                "SEN",
                "SGP",
                "SGS",
                "SHN",
                "SJM",
                "SLB",
                "SLE",
                "SLV",
                "SMR",
                "SOM",
                "SPM",
                "SRB",
                "SSD",
                "STP",
                "SUR",
                "SVK",
                "SVN",
                "SWE",
                "SWZ",
                "SXM",
                "SYC",
                "SYR",
                "TCA",
                "TCD",
                "TGO",
                "THA",
                "TJK",
                "TKL",
                "TKM",
                "TLS",
                "TON",
                "TTO",
                "TUN",
                "TUR",
                "TUV",
                "TWN",
                "TZA",
                "UGA",
                "UKR",
                "UMI",
                "URY",
                "USA",
                "UZB",
                "VAT",
                "VCT",
                "VEN",
                "VGB",
                "VIR",
                "VNM",
                "VUT",
                "WLF",
                "WSM",
                "XKX",
                "YEM",
                "ZAF",
                "ZMB",
                "ZWE"
            ],
            "type": "string"
        },
        "CrossmatchInput": {
            "required": [
                "donor_hla_typing",
                "recipient_antibodies"
            ],
            "properties": {
                "donor_hla_typing": {
                    "type": "array",
                    "description": "HLA typing of the patient. Use high resolution if available.",
                    "example": [
                        "A1",
                        "A32",
                        "B7",
                        "B51",
                        "DR11",
                        "DR15",
                        "A*02:03",
                        "A*11:01:35",
                        "DPA1*01:07",
                        "DRB4*01:01",
                        "DQB1*02:01:01:01"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "recipient_antibodies": {
                    "type": "array",
                    "description": "Detected HLA antibodies of the patient. Use high resolution if available. If high resolution is provided it is assumed that all tested antibodies were provided. If not it is assumed that either all or just positive ones were.",
                    "items": {
                        "$ref": "#/definitions/HLAAntibodyIn"
                    }
                }
            },
            "type": "object"
        },
        "CrossmatchOutput": {
            "required": [
                "hla_to_antibody",
                "parsing_issues"
            ],
            "properties": {
                "hla_to_antibody": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AntibodyMatchForHLAType"
                    }
                },
                "parsing_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParsingIssueBase"
                    }
                }
            },
            "type": "object"
        },
        "CycleOrChain": {
            "required": [
                "patients"
            ],
            "properties": {
                "patients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DonorToRecipient"
                    }
                },
                "scores": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "DefaultTxmEvent": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DetailedScoreForGroup": {
            "required": [
                "antibody_matches",
                "donor_matches",
                "group_compatibility_index",
                "hla_group",
                "recipient_matches"
            ],
            "properties": {
                "hla_group": {
                    "type": "string",
                    "example": "A",
                    "enum": [
                        "A",
                        "B",
                        "DRB1",
                        "CW",
                        "DP",
                        "DQ",
                        "OTHER_DR"
                    ]
                },
                "donor_matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AntigenMatch"
                    }
                },
                "recipient_matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AntigenMatch"
                    }
                },
                "group_compatibility_index": {
                    "type": "number",
                    "example": 2.0
                },
                "antibody_matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AntibodyMatch"
                    }
                }
            },
            "type": "object"
        },
        "Donor": {
            "required": [
                "active",
                "db_id",
                "donor_type",
                "etag",
                "medical_id",
                "parameters"
            ],
            "properties": {
                "db_id": {
                    "type": "integer",
                    "description": "Database id of the patient"
                },
                "medical_id": {
                    "type": "string",
                    "description": "Medical id of the patient"
                },
                "etag": {
                    "type": "integer",
                    "description": "Number of updates of a patient",
                    "example": 1
                },
                "active": {
                    "type": "boolean",
                    "description": "Whether the user shall be used in pairing calculation"
                },
                "internal_medical_id": {
                    "type": "string",
                    "description": "Internal medical id of the patient"
                },
                "parameters": {
                    "$ref": "#/definitions/PatientParameters"
                },
                "donor_type": {
                    "$ref": "#/definitions/DonorType"
                },
                "related_recipient_db_id": {
                    "type": "integer",
                    "description": "Database id of the related recipient"
                },
                "score_with_related_recipient": {
                    "type": "number",
                    "description": "Score calculated with related recipient"
                },
                "max_score_with_related_recipient": {
                    "type": "number",
                    "description": "Maximum transplant score"
                },
                "active_and_valid_pair": {
                    "type": "boolean",
                    "description": "Indication of whether the pair is included in the matching run"
                },
                "compatible_blood_with_related_recipient": {
                    "type": "boolean",
                    "description": "Indicator whether Donor and related recipients have compatible blood groups"
                },
                "detailed_score_with_related_recipient": {
                    "type": "array",
                    "description": "Contains details for compatibility index for each HLA Group compatibility\nindex is calculated for.",
                    "example": [
                        {
                            "hla_group": "A",
                            "donor_matches": [
                                {
                                    "hla_type": {
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A23"
                                        },
                                        "raw_code": "A23"
                                    },
                                    "match_type": "BROAD"
                                },
                                {
                                    "hla_type": {
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A1"
                                        },
                                        "raw_code": "A1"
                                    },
                                    "match_type": "SPLIT"
                                }
                            ],
                            "recipient_matches": [
                                {
                                    "hla_type": {
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A9"
                                        },
                                        "raw_code": "A9"
                                    },
                                    "match_type": "BROAD"
                                },
                                {
                                    "hla_type": {
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A1"
                                        },
                                        "raw_code": "A1"
                                    },
                                    "match_type": "SPLIT"
                                }
                            ],
                            "antibody_matches": [
                                {
                                    "hla_antibody": {
                                        "raw_code": "A9",
                                        "mfi": 0,
                                        "cutoff": 0,
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A9"
                                        },
                                        "type": "NORMAL"
                                    },
                                    "match_type": "NONE"
                                },
                                {
                                    "hla_antibody": {
                                        "raw_code": "A1",
                                        "mfi": 0,
                                        "cutoff": 0,
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A1"
                                        },
                                        "type": "NORMAL"
                                    },
                                    "match_type": "BROAD"
                                }
                            ],
                            "group_compatibility_index": 2.0
                        },
                        {
                            "hla_group": "B",
                            "donor_matches": [],
                            "recipient_matches": [],
                            "antibody_matches": [],
                            "group_compatibility_index": 0.0
                        },
                        {
                            "hla_group": "DRB1",
                            "donor_matches": [],
                            "recipient_matches": [],
                            "antibody_matches": [],
                            "group_compatibility_index": 0.0
                        }
                    ],
                    "items": {
                        "$ref": "#/definitions/DetailedScoreForGroup"
                    }
                },
                "parsing_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParsingIssue"
                    }
                },
                "all_messages": {
                    "$ref": "#/definitions/AllMessages"
                }
            },
            "type": "object"
        },
        "DonorInput": {
            "required": [
                "blood_group",
                "donor_type",
                "hla_typing",
                "medical_id"
            ],
            "properties": {
                "blood_group": {
                    "$ref": "#/definitions/BloodGroupEnum"
                },
                "sex": {
                    "$ref": "#/definitions/SexEnum"
                },
                "height": {
                    "type": "integer",
                    "description": "Height of the patient in centimeters.",
                    "example": 178
                },
                "weight": {
                    "type": "number",
                    "description": "Weight of the patient in kilograms.",
                    "example": 78.4
                },
                "year_of_birth": {
                    "type": "integer",
                    "description": "Year of birth of the patient.",
                    "example": 1945
                },
                "note": {
                    "type": "string",
                    "default": "",
                    "example": "donor note"
                },
                "medical_id": {
                    "type": "string",
                    "description": "Medical ID of the patient. This ID is unique thorough the system and can be used for the identification of a specific patient in your system. Typically, this is the patient ID used in your internal system.",
                    "example": "D1037"
                },
                "internal_medical_id": {
                    "type": "string",
                    "description": "Custom medical ID that will not be shown in UI, but will be stored and can be seen in patient xlsx export.",
                    "example": "123456"
                },
                "hla_typing": {
                    "type": "array",
                    "description": "HLA typing of the patient. Use high resolution if available.",
                    "example": [
                        "A1",
                        "A32",
                        "B7",
                        "B51",
                        "DR11",
                        "DR15",
                        "A*02:03",
                        "A*11:01:35",
                        "DPA1*01:07",
                        "DRB4*01:01",
                        "DQB1*02:01:01:01"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "donor_type": {
                    "$ref": "#/definitions/DonorType"
                },
                "related_recipient_medical_id": {
                    "type": "string",
                    "description": "Medical ID of the related recipient, empty for bridging and non-directed donors.",
                    "example": "R1037"
                }
            },
            "type": "object"
        },
        "DonorModelPairIn": {
            "required": [
                "country_code",
                "donor"
            ],
            "properties": {
                "country_code": {
                    "$ref": "#/definitions/CountryCode"
                },
                "donor": {
                    "$ref": "#/definitions/DonorInput"
                },
                "recipient": {
                    "$ref": "#/definitions/RecipientInput"
                }
            },
            "type": "object"
        },
        "DonorModelToUpdate": {
            "allOf": [
                {
                    "$ref": "#/definitions/PatientModelToUpdate"
                },
                {
                    "properties": {
                        "active": {
                            "type": "boolean",
                            "description": "Information, whether or not given donor shall be considered in exchange."
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "DonorToRecipient": {
            "required": [
                "donor_id",
                "recipient_id",
                "score"
            ],
            "properties": {
                "donor_id": {
                    "type": "integer"
                },
                "recipient_id": {
                    "type": "integer"
                },
                "score": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "DonorType": {
            "enum": [
                "DONOR",
                "BRIDGING_DONOR",
                "NON_DIRECTED"
            ],
            "type": "string",
            "description": "Type of the donor."
        },
        "FailResponse": {
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ForbiddenCountryCombination": {
            "required": [
                "donor_country",
                "recipient_country"
            ],
            "properties": {
                "donor_country": {
                    "$ref": "#/definitions/CountryCode"
                },
                "recipient_country": {
                    "$ref": "#/definitions/CountryCode"
                }
            },
            "type": "object"
        },
        "HLAAntibodyIn": {
            "required": [
                "cutoff",
                "mfi",
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "HLA antibody name in high (A\\*01:01), low (A\\*01), split (A1) or broad (A9) resolutions. In case of DP or DQ, when alpha and beta are provided, the expected format is DQ[01:01,02:02] equivalently DP[01:01,02:02], and will result in two separate antibodies. Alternatively, the antibodies can be provided separately, e.g., DQA*01:01 and DQB*02:02.",
                    "example": "A*01:01"
                },
                "mfi": {
                    "type": "integer",
                    "description": "Mean fluorescence intensity. Use exact value.",
                    "example": 2350
                },
                "cutoff": {
                    "type": "integer",
                    "description": "Default cutoff value for the specific patient and HLA antibody.",
                    "example": 2000
                }
            },
            "type": "object"
        },
        "HLAAntibodyType": {
            "enum": [
                "NORMAL",
                "THEORETICAL"
            ],
            "type": "string"
        },
        "HlaAntibodies": {
            "required": [
                "hla_antibodies_per_groups",
                "hla_antibodies_raw_list"
            ],
            "properties": {
                "hla_antibodies_raw_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HlaAntibodyRaw"
                    }
                },
                "hla_antibodies_per_groups": {
                    "type": "array",
                    "description": "hla antibodies split to hla groups",
                    "example": [
                        {
                            "hla_group": "A",
                            "hla_antibody_list": [
                                {
                                    "code": {
                                        "high_res": null,
                                        "split": null,
                                        "broad": "A1"
                                    },
                                    "raw_code": "A1",
                                    "mfi": 0,
                                    "cutoff": 0,
                                    "type": "NORMAL"
                                }
                            ]
                        },
                        {
                            "hla_group": "B",
                            "hla_antibody_list": [
                                {
                                    "code": {
                                        "high_res": null,
                                        "split": null,
                                        "broad": "B38"
                                    },
                                    "raw_code": "B38",
                                    "mfi": 10,
                                    "cutoff": 0,
                                    "type": "NORMAL"
                                }
                            ]
                        },
                        {
                            "hla_group": "DRB1",
                            "hla_antibody_list": [
                                {
                                    "code": {
                                        "high_res": null,
                                        "split": null,
                                        "broad": "DR7"
                                    },
                                    "raw_code": "DR7",
                                    "mfi": 0,
                                    "cutoff": 300,
                                    "type": "NORMAL"
                                }
                            ]
                        },
                        {
                            "hla_group": "CW",
                            "hla_antibody_list": [
                                {
                                    "code": {
                                        "high_res": null,
                                        "split": null,
                                        "broad": "CW4"
                                    },
                                    "raw_code": "CW4",
                                    "mfi": 500,
                                    "cutoff": 500,
                                    "type": "NORMAL"
                                }
                            ]
                        }
                    ],
                    "items": {
                        "$ref": "#/definitions/AntibodiesPerGroup"
                    }
                }
            },
            "type": "object"
        },
        "HlaAntibodiesToUpdate": {
            "required": [
                "hla_antibodies_list"
            ],
            "properties": {
                "hla_antibodies_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HlaAntibodyToUpdate"
                    }
                }
            },
            "type": "object"
        },
        "HlaAntibody": {
            "required": [
                "code",
                "cutoff",
                "mfi",
                "raw_code",
                "type"
            ],
            "properties": {
                "raw_code": {
                    "type": "string"
                },
                "second_raw_code": {
                    "type": "string"
                },
                "mfi": {
                    "type": "integer"
                },
                "cutoff": {
                    "type": "integer"
                },
                "code": {
                    "$ref": "#/definitions/HlaCode"
                },
                "second_code": {
                    "$ref": "#/definitions/HlaCode"
                },
                "type": {
                    "$ref": "#/definitions/HLAAntibodyType"
                }
            },
            "type": "object"
        },
        "HlaAntibodyRaw": {
            "required": [
                "cutoff",
                "mfi",
                "raw_code"
            ],
            "properties": {
                "raw_code": {
                    "type": "string"
                },
                "mfi": {
                    "type": "integer"
                },
                "cutoff": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "HlaAntibodyToUpdate": {
            "required": [
                "mfi",
                "raw_code"
            ],
            "properties": {
                "raw_code": {
                    "type": "string",
                    "example": "A*01:02"
                },
                "mfi": {
                    "type": "integer",
                    "example": 10000
                }
            },
            "type": "object"
        },
        "HlaCode": {
            "required": [
                "broad"
            ],
            "properties": {
                "high_res": {
                    "type": "string"
                },
                "split": {
                    "type": "string"
                },
                "broad": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "example": "A",
                    "enum": [
                        "A",
                        "B",
                        "DRB1",
                        "CW",
                        "DP",
                        "DQ",
                        "OTHER_DR"
                    ]
                }
            },
            "type": "object"
        },
        "HlaCodesInGroups": {
            "required": [
                "hla_group",
                "hla_types"
            ],
            "properties": {
                "hla_group": {
                    "type": "string",
                    "example": "A",
                    "enum": [
                        "A",
                        "B",
                        "DRB1",
                        "CW",
                        "DP",
                        "DQ",
                        "OTHER_DR"
                    ]
                },
                "hla_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HlaType"
                    }
                }
            },
            "type": "object"
        },
        "HlaCrossmatchLevel": {
            "enum": [
                "NONE",
                "BROAD",
                "SPLIT_AND_BROAD"
            ],
            "type": "string"
        },
        "HlaType": {
            "required": [
                "code",
                "raw_code"
            ],
            "properties": {
                "code": {
                    "$ref": "#/definitions/HlaCode"
                },
                "raw_code": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HlaTypeRaw": {
            "required": [
                "raw_code"
            ],
            "properties": {
                "raw_code": {
                    "type": "string",
                    "description": "Antigen raw code",
                    "example": "A32"
                }
            },
            "type": "object"
        },
        "HlaTypeToUpdate": {
            "required": [
                "raw_code"
            ],
            "properties": {
                "raw_code": {
                    "type": "string",
                    "example": "A*01:02"
                }
            },
            "type": "object"
        },
        "HlaTyping": {
            "required": [
                "hla_per_groups",
                "hla_types_raw_list"
            ],
            "properties": {
                "hla_types_raw_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HlaTypeRaw"
                    }
                },
                "hla_per_groups": {
                    "type": "array",
                    "description": "hla types split to hla groups",
                    "example": [
                        {
                            "hla_group": "A",
                            "hla_types": [
                                {
                                    "code": {
                                        "high_res": null,
                                        "split": null,
                                        "broad": "A1"
                                    },
                                    "raw_code": "A1"
                                }
                            ]
                        },
                        {
                            "hla_group": "B",
                            "hla_types": [
                                {
                                    "code": {
                                        "high_res": null,
                                        "split": null,
                                        "broad": "B38"
                                    },
                                    "raw_code": "B38"
                                }
                            ]
                        },
                        {
                            "hla_group": "DRB1",
                            "hla_types": [
                                {
                                    "code": {
                                        "high_res": null,
                                        "split": null,
                                        "broad": "DR7"
                                    },
                                    "raw_code": "DR7"
                                }
                            ]
                        },
                        {
                            "hla_group": "CW",
                            "hla_types": [
                                {
                                    "code": {
                                        "high_res": null,
                                        "split": null,
                                        "broad": "CW4"
                                    },
                                    "raw_code": "CW4"
                                }
                            ]
                        }
                    ],
                    "items": {
                        "$ref": "#/definitions/HlaCodesInGroups"
                    }
                }
            },
            "type": "object"
        },
        "HlaTypingToUpdate": {
            "required": [
                "hla_types_list"
            ],
            "properties": {
                "hla_types_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HlaTypeToUpdate"
                    }
                }
            },
            "type": "object"
        },
        "Identifier": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Limitations": {
            "properties": {
                "max_cycle_length": {
                    "type": "integer",
                    "example": 3
                },
                "max_chain_length": {
                    "type": "integer",
                    "example": 4
                },
                "custom_algorithm_settings": {
                    "type": "object",
                    "example": {
                        "max_number_of_iterations": 200
                    }
                }
            },
            "type": "object"
        },
        "LoginSuccessResponse": {
            "required": [
                "auth_token"
            ],
            "properties": {
                "auth_token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ManualRecipientDonorScore": {
            "required": [
                "donor_db_id",
                "recipient_db_id",
                "score"
            ],
            "properties": {
                "donor_db_id": {
                    "type": "integer",
                    "example": 2
                },
                "recipient_db_id": {
                    "type": "integer",
                    "example": 3
                },
                "score": {
                    "type": "number",
                    "example": 2.0
                }
            },
            "type": "object"
        },
        "Matching": {
            "required": [
                "count_of_transplants",
                "countries",
                "order_id",
                "rounds",
                "score"
            ],
            "properties": {
                "score": {
                    "type": "number"
                },
                "rounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Round"
                    }
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Country"
                    }
                },
                "order_id": {
                    "type": "integer"
                },
                "count_of_transplants": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NewTxmEvent": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "strictness_type": {
                    "$ref": "#/definitions/StrictnessType"
                }
            },
            "type": "object"
        },
        "OptimizerConfiguration": {
            "properties": {
                "limitations": {
                    "$ref": "#/definitions/Limitations"
                },
                "scoring": {
                    "type": "array",
                    "example": [
                        [
                            {
                                "transplant_count": 1
                            }
                        ],
                        [
                            {
                                "hla_compatibility_score": 3
                            },
                            {
                                "donor_age_difference": 20
                            }
                        ]
                    ],
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            },
            "type": "object"
        },
        "OptimizerRequest": {
            "required": [
                "compatibility_graph",
                "configuration"
            ],
            "properties": {
                "compatibility_graph": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompatibilityGraphEntry"
                    }
                },
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pair"
                    }
                },
                "configuration": {
                    "$ref": "#/definitions/OptimizerConfiguration"
                }
            },
            "type": "object"
        },
        "OptimizerReturn": {
            "required": [
                "cycles_and_chains"
            ],
            "properties": {
                "cycles_and_chains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CycleOrChain"
                    }
                },
                "statistics": {
                    "$ref": "#/definitions/Statistics"
                }
            },
            "type": "object"
        },
        "OtpLogin": {
            "required": [
                "otp"
            ],
            "properties": {
                "otp": {
                    "type": "string",
                    "description": "OTP for this login."
                }
            },
            "type": "object"
        },
        "Pair": {
            "required": [
                "donor_id"
            ],
            "properties": {
                "donor_id": {
                    "type": "integer",
                    "example": 1
                },
                "recipient_id": {
                    "type": "integer",
                    "example": 4
                },
                "category": {
                    "type": "string",
                    "example": "Spain"
                }
            },
            "type": "object"
        },
        "ParsingIssue": {
            "required": [
                "confirmed_at",
                "confirmed_by",
                "db_id",
                "hla_code_or_group",
                "message",
                "parsing_issue_detail",
                "txm_event_id"
            ],
            "properties": {
                "hla_code_or_group": {
                    "type": "string"
                },
                "parsing_issue_detail": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "db_id": {
                    "type": "integer"
                },
                "txm_event_id": {
                    "type": "integer"
                },
                "confirmed_by": {
                    "type": "integer"
                },
                "confirmed_at": {
                    "type": "string",
                    "format": "date"
                },
                "donor_id": {
                    "type": "integer"
                },
                "recipient_id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ParsingIssueBase": {
            "required": [
                "hla_code_or_group",
                "message",
                "parsing_issue_detail"
            ],
            "properties": {
                "hla_code_or_group": {
                    "type": "string"
                },
                "parsing_issue_detail": {
                    "type": "string",
                    "example": "SUCCESSFULLY_PARSED",
                    "enum": [
                        "SUCCESSFULLY_PARSED",
                        "HIGH_RES_WITHOUT_SPLIT",
                        "HIGH_RES_WITH_LETTER",
                        "HIGH_RES_WITH_ASSUMED_SPLIT_CODE",
                        "CREATED_THEORETICAL_ANTIBODY",
                        "MULTIPLE_SPLITS_OR_BROADS_FOUND",
                        "IRRELEVANT_CODE",
                        "UNEXPECTED_SPLIT_RES_CODE",
                        "UNKNOWN_TRANSFORMATION_FROM_HIGH_RES",
                        "UNPARSABLE_HLA_CODE",
                        "MORE_THAN_TWO_HLA_CODES_PER_GROUP",
                        "BASIC_HLA_GROUP_IS_EMPTY",
                        "ALL_ANTIBODIES_ARE_POSITIVE_IN_HIGH_RES",
                        "INSUFFICIENT_NUMBER_OF_ANTIBODIES_IN_HIGH_RES",
                        "MULTIPLE_CUTOFFS_PER_GROUP",
                        "DUPLICATE_ANTIBODY_SINGLE_CHAIN",
                        "MFI_PROBLEM",
                        "OTHER_PROBLEM"
                    ]
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ParsingIssuePublic": {
            "required": [
                "hla_code_or_group",
                "medical_id",
                "message",
                "parsing_issue_detail",
                "txm_event_name"
            ],
            "properties": {
                "hla_code_or_group": {
                    "type": "string"
                },
                "parsing_issue_detail": {
                    "type": "string",
                    "example": "SUCCESSFULLY_PARSED",
                    "enum": [
                        "SUCCESSFULLY_PARSED",
                        "HIGH_RES_WITHOUT_SPLIT",
                        "HIGH_RES_WITH_LETTER",
                        "HIGH_RES_WITH_ASSUMED_SPLIT_CODE",
                        "CREATED_THEORETICAL_ANTIBODY",
                        "MULTIPLE_SPLITS_OR_BROADS_FOUND",
                        "IRRELEVANT_CODE",
                        "UNEXPECTED_SPLIT_RES_CODE",
                        "UNKNOWN_TRANSFORMATION_FROM_HIGH_RES",
                        "UNPARSABLE_HLA_CODE",
                        "MORE_THAN_TWO_HLA_CODES_PER_GROUP",
                        "BASIC_HLA_GROUP_IS_EMPTY",
                        "ALL_ANTIBODIES_ARE_POSITIVE_IN_HIGH_RES",
                        "INSUFFICIENT_NUMBER_OF_ANTIBODIES_IN_HIGH_RES",
                        "MULTIPLE_CUTOFFS_PER_GROUP",
                        "DUPLICATE_ANTIBODY_SINGLE_CHAIN",
                        "MFI_PROBLEM",
                        "OTHER_PROBLEM"
                    ]
                },
                "message": {
                    "type": "string"
                },
                "txm_event_name": {
                    "type": "string"
                },
                "medical_id": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PasswordChange": {
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string",
                    "description": "Current password."
                },
                "new_password": {
                    "type": "string",
                    "description": "New password."
                }
            },
            "type": "object"
        },
        "PatientModelToUpdate": {
            "required": [
                "blood_group",
                "db_id",
                "etag"
            ],
            "properties": {
                "db_id": {
                    "type": "integer",
                    "description": "Database id of the patient",
                    "example": 1
                },
                "blood_group": {
                    "$ref": "#/definitions/BloodGroupEnum"
                },
                "sex": {
                    "$ref": "#/definitions/SexEnum"
                },
                "height": {
                    "type": "integer",
                    "description": "Height of the patient in centimeters.",
                    "example": 178
                },
                "weight": {
                    "type": "number",
                    "description": "Weight of the patient in kilograms.",
                    "example": 78.4
                },
                "year_of_birth": {
                    "type": "integer",
                    "description": "Year of birth of the patient.",
                    "example": 1945
                },
                "note": {
                    "type": "string",
                    "default": "",
                    "example": "donor note"
                },
                "etag": {
                    "type": "integer",
                    "description": "Number of updates of a patient",
                    "example": 1
                },
                "hla_typing": {
                    "description": "Provide full list of all the HLA types of the patient, not just the change set",
                    "example": {
                        "hla_types_list": [
                            {
                                "raw_code": "A*01:02"
                            },
                            {
                                "raw_code": "B7"
                            },
                            {
                                "raw_code": "DR11"
                            }
                        ]
                    },
                    "allOf": [
                        {
                            "$ref": "#/definitions/HlaTypingToUpdate"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "PatientParameters": {
            "required": [
                "blood_group",
                "country_code",
                "note"
            ],
            "properties": {
                "blood_group": {
                    "$ref": "#/definitions/BloodGroupEnum"
                },
                "hla_typing": {
                    "$ref": "#/definitions/HlaTyping"
                },
                "country_code": {
                    "$ref": "#/definitions/CountryCode"
                },
                "sex": {
                    "$ref": "#/definitions/SexEnum"
                },
                "height": {
                    "type": "integer"
                },
                "weight": {
                    "type": "number"
                },
                "year_of_birth": {
                    "type": "integer"
                },
                "note": {
                    "type": "string",
                    "example": "patient note"
                }
            },
            "type": "object"
        },
        "PatientUploadSuccessResponse": {
            "required": [
                "donors_uploaded",
                "parsing_issues",
                "recipients_uploaded"
            ],
            "properties": {
                "recipients_uploaded": {
                    "type": "integer",
                    "description": "Number of recipients successfully loaded into the application."
                },
                "donors_uploaded": {
                    "type": "integer",
                    "description": "Number of donors successfully loaded into the application."
                },
                "parsing_issues": {
                    "type": "array",
                    "description": "Errors and warnings that occurred in HLA codes parsing",
                    "items": {
                        "$ref": "#/definitions/ParsingIssuePublic"
                    }
                }
            },
            "type": "object"
        },
        "Patients": {
            "properties": {
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Recipient"
                    }
                },
                "donors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Donor"
                    }
                }
            },
            "type": "object"
        },
        "PatientsRecomputeParsingSuccess": {
            "required": [
                "parsing_issues",
                "patients_changed_antibodies",
                "patients_changed_antigens",
                "patients_checked_antibodies",
                "patients_checked_antigens"
            ],
            "properties": {
                "patients_checked_antigens": {
                    "type": "integer"
                },
                "patients_changed_antigens": {
                    "type": "integer"
                },
                "patients_checked_antibodies": {
                    "type": "integer"
                },
                "patients_changed_antibodies": {
                    "type": "integer"
                },
                "parsing_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParsingIssue"
                    }
                }
            },
            "type": "object"
        },
        "Recipient": {
            "required": [
                "db_id",
                "etag",
                "hla_antibodies",
                "medical_id",
                "parameters",
                "related_donors_db_ids"
            ],
            "properties": {
                "db_id": {
                    "type": "integer",
                    "description": "Database id of the patient",
                    "example": 1
                },
                "medical_id": {
                    "type": "string",
                    "description": "Medical ID of the patient. This ID is unique thorough the system and can be used for the identification of a specific patient in your system. Typically, this is the patient ID used in your internal system.",
                    "example": "D1037"
                },
                "etag": {
                    "type": "integer",
                    "description": "Number of updates of a patient",
                    "example": 1
                },
                "acceptable_blood_groups": {
                    "type": "array",
                    "example": [
                        "A",
                        "0"
                    ],
                    "items": {
                        "$ref": "#/definitions/BloodGroupEnum"
                    }
                },
                "internal_medical_id": {
                    "type": "string",
                    "description": "Internal medical id of the patient"
                },
                "parameters": {
                    "$ref": "#/definitions/PatientParameters"
                },
                "hla_antibodies": {
                    "$ref": "#/definitions/HlaAntibodies"
                },
                "related_donors_db_ids": {
                    "type": "array",
                    "description": "Database id of the related donor",
                    "items": {
                        "type": "integer"
                    }
                },
                "recipient_requirements": {
                    "$ref": "#/definitions/RecipientRequirements"
                },
                "waiting_since": {
                    "type": "string",
                    "format": "date-time"
                },
                "previous_transplants": {
                    "type": "integer"
                },
                "recipient_cutoff": {
                    "type": "integer"
                },
                "parsing_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParsingIssue"
                    }
                },
                "cpra": {
                    "type": "number",
                    "description": "Recipient's cPRA [%]."
                },
                "compatible_donors_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecipientDonorCompatibilityDetails"
                    }
                },
                "all_messages": {
                    "$ref": "#/definitions/AllMessages"
                }
            },
            "type": "object"
        },
        "RecipientCompatibilityInfoJson": {
            "required": [
                "cPRA",
                "compatible_donors",
                "compatible_donors_details"
            ],
            "properties": {
                "cPRA": {
                    "type": "number",
                    "description": "recipient's cPRA [%].",
                    "example": 95
                },
                "compatible_donors": {
                    "type": "array",
                    "example": [
                        3,
                        4,
                        5,
                        7,
                        8,
                        10,
                        15
                    ],
                    "items": {
                        "type": "integer"
                    }
                },
                "compatible_donors_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecipientDonorCompatibilityDetails"
                    }
                }
            },
            "type": "object"
        },
        "RecipientDonorCompatibilityDetails": {
            "required": [
                "compatible_blood",
                "detailed_score",
                "donor_db_id",
                "max_score",
                "recipient_db_id",
                "score"
            ],
            "properties": {
                "recipient_db_id": {
                    "type": "integer",
                    "description": "Database id of the recipient",
                    "example": 1
                },
                "donor_db_id": {
                    "type": "integer",
                    "description": "Database id of the donor",
                    "example": 1
                },
                "score": {
                    "type": "number",
                    "description": "Compatibility score of donor and recipient"
                },
                "max_score": {
                    "type": "number",
                    "description": "Maximum transplant score"
                },
                "compatible_blood": {
                    "type": "boolean",
                    "description": "Indicator whether donor and recipient have compatible blood groups"
                },
                "detailed_score": {
                    "type": "array",
                    "description": "Contains details for compatibility index for each HLA Group compatibility\nindex is calculated for.",
                    "example": [
                        {
                            "hla_group": "A",
                            "donor_matches": [
                                {
                                    "hla_type": {
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A23"
                                        },
                                        "raw_code": "A23"
                                    },
                                    "match_type": "BROAD"
                                },
                                {
                                    "hla_type": {
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A1"
                                        },
                                        "raw_code": "A1"
                                    },
                                    "match_type": "SPLIT"
                                }
                            ],
                            "recipient_matches": [
                                {
                                    "hla_type": {
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A9"
                                        },
                                        "raw_code": "A9"
                                    },
                                    "match_type": "BROAD"
                                },
                                {
                                    "hla_type": {
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A1"
                                        },
                                        "raw_code": "A1"
                                    },
                                    "match_type": "SPLIT"
                                }
                            ],
                            "antibody_matches": [
                                {
                                    "hla_antibody": {
                                        "raw_code": "A9",
                                        "mfi": 0,
                                        "cutoff": 0,
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A9"
                                        },
                                        "type": "NORMAL"
                                    },
                                    "match_type": "NONE"
                                },
                                {
                                    "hla_antibody": {
                                        "raw_code": "A1",
                                        "mfi": 0,
                                        "cutoff": 0,
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A1"
                                        },
                                        "type": "NORMAL"
                                    },
                                    "match_type": "BROAD"
                                }
                            ],
                            "group_compatibility_index": 2.0
                        },
                        {
                            "hla_group": "B",
                            "donor_matches": [],
                            "recipient_matches": [],
                            "antibody_matches": [],
                            "group_compatibility_index": 0.0
                        },
                        {
                            "hla_group": "DRB1",
                            "donor_matches": [],
                            "recipient_matches": [],
                            "antibody_matches": [],
                            "group_compatibility_index": 0.0
                        }
                    ],
                    "items": {
                        "$ref": "#/definitions/DetailedScoreForGroup"
                    }
                }
            },
            "type": "object"
        },
        "RecipientInput": {
            "required": [
                "blood_group",
                "hla_antibodies",
                "hla_typing",
                "medical_id"
            ],
            "properties": {
                "blood_group": {
                    "$ref": "#/definitions/BloodGroupEnum"
                },
                "sex": {
                    "$ref": "#/definitions/SexEnum"
                },
                "height": {
                    "type": "integer",
                    "description": "Height of the patient in centimeters.",
                    "example": 178
                },
                "weight": {
                    "type": "number",
                    "description": "Weight of the patient in kilograms.",
                    "example": 78.4
                },
                "year_of_birth": {
                    "type": "integer",
                    "description": "Year of birth of the patient.",
                    "example": 1945
                },
                "note": {
                    "type": "string",
                    "default": "",
                    "example": "donor note"
                },
                "medical_id": {
                    "type": "string",
                    "description": "Medical ID of the patient. This ID is unique thorough the system and can be used for the identification of a specific patient in your system. Typically, this is the patient ID used in your internal system.",
                    "example": "D1037"
                },
                "internal_medical_id": {
                    "type": "string",
                    "description": "Custom medical ID that will not be shown in UI, but will be stored and can be seen in patient xlsx export.",
                    "example": "123456"
                },
                "hla_typing": {
                    "type": "array",
                    "description": "HLA typing of the patient. Use high resolution if available.",
                    "example": [
                        "A1",
                        "A32",
                        "B7",
                        "B51",
                        "DR11",
                        "DR15",
                        "A*02:03",
                        "A*11:01:35",
                        "DPA1*01:07",
                        "DRB4*01:01",
                        "DQB1*02:01:01:01"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "acceptable_blood_groups": {
                    "type": "array",
                    "description": "Acceptable blood groups for the patient. Leave empty to use compatible blood groups.",
                    "example": [
                        "A",
                        "0"
                    ],
                    "items": {
                        "$ref": "#/definitions/BloodGroupEnum"
                    }
                },
                "waiting_since": {
                    "type": "string",
                    "format": "date",
                    "description": "Date since when the patient has been on waiting list. Use format YYYY-MM-DD.",
                    "example": "2015-01-17"
                },
                "previous_transplants": {
                    "type": "integer",
                    "description": "Number of previous kidney transplants.",
                    "example": 0
                },
                "hla_antibodies": {
                    "type": "array",
                    "description": "Detected HLA antibodies of the patient. Use high resolution if available. If high resolution is provided it is assumed that all tested antibodies were provided. If not it is assumed that either all or just positive ones were.",
                    "items": {
                        "$ref": "#/definitions/HLAAntibodyIn"
                    }
                }
            },
            "type": "object"
        },
        "RecipientModelToUpdate": {
            "allOf": [
                {
                    "$ref": "#/definitions/PatientModelToUpdate"
                },
                {
                    "properties": {
                        "acceptable_blood_groups": {
                            "type": "array",
                            "description": "Acceptable blood groups for the patient. Leave empty to use compatible blood groups.",
                            "example": [
                                "A",
                                "0"
                            ],
                            "items": {
                                "$ref": "#/definitions/BloodGroupEnum"
                            }
                        },
                        "waiting_since": {
                            "type": "string",
                            "format": "date",
                            "description": "Date since when the patient has been on waiting list. Use format YYYY-MM-DD.",
                            "example": "2015-01-17"
                        },
                        "previous_transplants": {
                            "type": "integer",
                            "description": "Number of previous kidney transplants.",
                            "example": 0
                        },
                        "hla_antibodies": {
                            "description": "Provide full list of all the HLA antibodies of the patient, not just the change set",
                            "example": {
                                "hla_antibodies_list": [
                                    {
                                        "raw_code": "A*01:02",
                                        "mfi": 10000
                                    }
                                ]
                            },
                            "allOf": [
                                {
                                    "$ref": "#/definitions/HlaAntibodiesToUpdate"
                                }
                            ]
                        },
                        "recipient_requirements": {
                            "description": "Provide the whole recipients requirements object, it will be overwritten",
                            "example": {
                                "require_better_match_in_compatibility_index": true
                            },
                            "allOf": [
                                {
                                    "$ref": "#/definitions/RecipientRequirements"
                                }
                            ]
                        },
                        "cutoff": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "RecipientRequirements": {
            "required": [
                "require_better_match_in_compatibility_index",
                "require_better_match_in_compatibility_index_or_blood_group",
                "require_compatible_blood_group"
            ],
            "properties": {
                "require_better_match_in_compatibility_index": {
                    "type": "boolean"
                },
                "require_better_match_in_compatibility_index_or_blood_group": {
                    "type": "boolean"
                },
                "require_compatible_blood_group": {
                    "type": "boolean"
                },
                "max_donor_weight": {
                    "type": "number"
                },
                "min_donor_weight": {
                    "type": "number"
                },
                "max_donor_height": {
                    "type": "integer"
                },
                "min_donor_height": {
                    "type": "integer"
                },
                "max_donor_age": {
                    "type": "integer"
                },
                "min_donor_age": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ResetPassword": {
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "description": "Reset Token."
                },
                "password": {
                    "type": "string",
                    "description": "New password."
                }
            },
            "type": "object"
        },
        "ResetRequestResponse": {
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Round": {
            "properties": {
                "transplants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Transplant"
                    }
                }
            },
            "type": "object"
        },
        "Scorer": {
            "enum": [
                "SplitScorer",
                "HighResScorer",
                "HighResWithDQDPScorer"
            ],
            "type": "string"
        },
        "ServiceStatus": {
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Indication of service's health.",
                    "example": "OK",
                    "enum": [
                        "OK",
                        "Failing"
                    ]
                },
                "exception": {
                    "type": "string",
                    "description": "Additional indication what is wrong."
                }
            },
            "type": "object"
        },
        "SexEnum": {
            "enum": [
                "M",
                "F"
            ],
            "type": "string",
            "description": "Sex of the patient."
        },
        "Solver": {
            "enum": [
                "AllSolutionsSolver",
                "ILPSolver"
            ],
            "type": "string"
        },
        "Statistics": {
            "required": [
                "number_of_found_cycles_and_chains",
                "number_of_found_transplants"
            ],
            "properties": {
                "number_of_found_cycles_and_chains": {
                    "type": "integer"
                },
                "number_of_found_transplants": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "StrictnessType": {
            "enum": [
                "STRICT",
                "FORGIVING"
            ],
            "type": "string",
            "description": "Level of strictness for HLA parsing."
        },
        "Success": {
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Transplant": {
            "required": [
                "compatible_blood",
                "detailed_score_per_group",
                "donor",
                "max_score",
                "recipient",
                "score"
            ],
            "properties": {
                "score": {
                    "type": "number"
                },
                "max_score": {
                    "type": "number"
                },
                "compatible_blood": {
                    "type": "boolean"
                },
                "donor": {
                    "type": "string"
                },
                "recipient": {
                    "type": "string"
                },
                "detailed_score_per_group": {
                    "type": "array",
                    "description": "Contains details for compatibility index for each HLA Group compatibility\nindex is calculated for.",
                    "example": [
                        {
                            "hla_group": "A",
                            "donor_matches": [
                                {
                                    "hla_type": {
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A23"
                                        },
                                        "raw_code": "A23"
                                    },
                                    "match_type": "BROAD"
                                },
                                {
                                    "hla_type": {
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A1"
                                        },
                                        "raw_code": "A1"
                                    },
                                    "match_type": "SPLIT"
                                }
                            ],
                            "recipient_matches": [
                                {
                                    "hla_type": {
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A9"
                                        },
                                        "raw_code": "A9"
                                    },
                                    "match_type": "BROAD"
                                },
                                {
                                    "hla_type": {
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A1"
                                        },
                                        "raw_code": "A1"
                                    },
                                    "match_type": "SPLIT"
                                }
                            ],
                            "antibody_matches": [
                                {
                                    "hla_antibody": {
                                        "raw_code": "A9",
                                        "mfi": 0,
                                        "cutoff": 0,
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A9"
                                        },
                                        "type": "NORMAL"
                                    },
                                    "match_type": "NONE"
                                },
                                {
                                    "hla_antibody": {
                                        "raw_code": "A1",
                                        "mfi": 0,
                                        "cutoff": 0,
                                        "code": {
                                            "high_res": null,
                                            "split": null,
                                            "broad": "A1"
                                        },
                                        "type": "NORMAL"
                                    },
                                    "match_type": "BROAD"
                                }
                            ],
                            "group_compatibility_index": 2.0
                        },
                        {
                            "hla_group": "B",
                            "donor_matches": [],
                            "recipient_matches": [],
                            "antibody_matches": [],
                            "group_compatibility_index": 0.0
                        },
                        {
                            "hla_group": "DRB1",
                            "donor_matches": [],
                            "recipient_matches": [],
                            "antibody_matches": [],
                            "group_compatibility_index": 0.0
                        }
                    ],
                    "items": {
                        "$ref": "#/definitions/DetailedScoreForGroup"
                    }
                },
                "transplant_messages": {
                    "$ref": "#/definitions/TransplantWarning"
                }
            },
            "type": "object"
        },
        "TransplantWarning": {
            "properties": {
                "message_global": {
                    "type": "string"
                },
                "all_messages": {
                    "$ref": "#/definitions/AllTransplantMessages"
                }
            },
            "type": "object"
        },
        "TxmEvent": {
            "required": [
                "id",
                "name",
                "state",
                "strictness_type"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "default_config_id": {
                    "type": "integer"
                },
                "state": {
                    "$ref": "#/definitions/TxmEventState"
                },
                "strictness_type": {
                    "$ref": "#/definitions/StrictnessType"
                }
            },
            "type": "object"
        },
        "TxmEventCopy": {
            "required": [
                "donor_ids",
                "txm_event_id_from",
                "txm_event_id_to"
            ],
            "properties": {
                "txm_event_id_from": {
                    "type": "integer"
                },
                "txm_event_id_to": {
                    "type": "integer"
                },
                "donor_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "TxmEventExport": {
            "required": [
                "country",
                "new_txm_event_name"
            ],
            "properties": {
                "country": {
                    "$ref": "#/definitions/CountryCode"
                },
                "new_txm_event_name": {
                    "type": "string"
                },
                "strictness_type": {
                    "$ref": "#/definitions/StrictnessType"
                }
            },
            "type": "object"
        },
        "TxmEventState": {
            "enum": [
                "OPEN",
                "CLOSED"
            ],
            "type": "string"
        },
        "TxmEventUpdateIn": {
            "properties": {
                "state": {
                    "$ref": "#/definitions/TxmEventState"
                }
            },
            "type": "object"
        },
        "TxmEvents": {
            "required": [
                "events"
            ],
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TxmEvent"
                    }
                }
            },
            "type": "object"
        },
        "UpdatedDonor": {
            "required": [
                "donor",
                "parsing_issues"
            ],
            "properties": {
                "donor": {
                    "$ref": "#/definitions/Donor"
                },
                "parsing_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParsingIssuePublic"
                    }
                }
            },
            "type": "object"
        },
        "UpdatedRecipient": {
            "required": [
                "parsing_issues",
                "recipient"
            ],
            "properties": {
                "recipient": {
                    "$ref": "#/definitions/Recipient"
                },
                "parsing_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParsingIssuePublic"
                    }
                }
            },
            "type": "object"
        },
        "UploadPatients": {
            "required": [
                "country",
                "donors",
                "recipients",
                "txm_event_name"
            ],
            "properties": {
                "country": {
                    "$ref": "#/definitions/CountryCode"
                },
                "txm_event_name": {
                    "type": "string",
                    "description": "The TXM event name has to be provided by an ADMIN.",
                    "example": "2020-10-example_event"
                },
                "donors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DonorInput"
                    }
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecipientInput"
                    }
                },
                "add_to_existing_patients": {
                    "type": "boolean",
                    "description": "If *true* the currently uploaded patients will be added to the patients already in the system. If *false* the data in the system will be overwritten by the currently uploaded data.",
                    "default": false
                },
                "strictness_type": {
                    "$ref": "#/definitions/StrictnessType"
                }
            },
            "type": "object"
        },
        "UserLogin": {
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email of the user to login."
                },
                "password": {
                    "type": "string",
                    "description": "User's password."
                }
            },
            "type": "object"
        },
        "UserRegistration": {
            "required": [
                "allowed_countries",
                "allowed_txm_events",
                "email",
                "password",
                "require_second_factor",
                "role",
                "second_factor"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email/username used for authentication."
                },
                "password": {
                    "type": "string",
                    "description": "User's password."
                },
                "role": {
                    "type": "string",
                    "description": "User's role.",
                    "example": "ADMIN",
                    "enum": [
                        "ADMIN",
                        "VIEWER",
                        "EDITOR",
                        "SERVICE"
                    ]
                },
                "require_second_factor": {
                    "type": "boolean",
                    "description": "Whether to require second factor for the user",
                    "example": true
                },
                "second_factor": {
                    "type": "string",
                    "description": "2FA: Phone number for user account in standard format (see example), IP address for SERVICE account.",
                    "example": "+420657123987"
                },
                "allowed_countries": {
                    "type": "array",
                    "description": "Countries that the user has access to.",
                    "example": [
                        "AUT",
                        "CZE"
                    ],
                    "items": {
                        "$ref": "#/definitions/CountryCode"
                    }
                },
                "allowed_txm_events": {
                    "type": "array",
                    "description": "Countries that the user has access to.",
                    "example": [
                        "test"
                    ],
                    "items": {
                        "type": "string",
                        "description": "Name of TXM event"
                    }
                }
            },
            "type": "object"
        },
        "UserRegistrationOut": {
            "required": [
                "allowed_countries",
                "allowed_txm_events",
                "email",
                "password_reset_token",
                "password_reset_token_message",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email/username used for authentication."
                },
                "role": {
                    "type": "string",
                    "description": "User's role.",
                    "example": "ADMIN",
                    "enum": [
                        "ADMIN",
                        "VIEWER",
                        "EDITOR",
                        "SERVICE"
                    ]
                },
                "allowed_countries": {
                    "type": "array",
                    "description": "Countries that the user has access to.",
                    "example": [
                        "AUT",
                        "CZE"
                    ],
                    "items": {
                        "$ref": "#/definitions/CountryCode"
                    }
                },
                "allowed_txm_events": {
                    "type": "array",
                    "description": "Countries that the user has access to.",
                    "example": [
                        "test"
                    ],
                    "items": {
                        "type": "string",
                        "description": "Name of TXM event"
                    }
                },
                "password_reset_token": {
                    "type": "string",
                    "description": "token to reset password",
                    "example": "long_string_token"
                },
                "password_reset_token_message": {
                    "type": "string",
                    "description": "detailed description how to reset password including url",
                    "example": "To reset password go tu url: www.reset.password/token"
                }
            },
            "type": "object"
        },
        "Version": {
            "required": [
                "colour_scheme",
                "environment",
                "version"
            ],
            "properties": {
                "version": {
                    "type": "string",
                    "description": "Version of the running code."
                },
                "colour_scheme": {
                    "type": "string",
                    "description": "Colour scheme to use.",
                    "example": "IKEM",
                    "enum": [
                        "IKEM",
                        "MILD_BLUE"
                    ]
                },
                "environment": {
                    "type": "string",
                    "description": "Environment the code was build for.",
                    "example": "PRODUCTION",
                    "enum": [
                        "PRODUCTION",
                        "STAGING",
                        "DEVELOPMENT"
                    ]
                }
            },
            "type": "object"
        }
    }
}