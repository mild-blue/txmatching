{
    "swagger": "2.0",
    "basePath": "/",
    "paths": {
        "/v1/optimizer": {
            "post": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Endpoint that calculates matchings from compatibility graph and configuration",
                        "schema": {
                            "$ref": "#/definitions/OptimizerReturn"
                        }
                    }
                },
                "operationId": "post_optimize",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OptimizerRequest"
                        }
                    }
                ],
                "tags": [
                    "optimizer"
                ]
            }
        },
        "/v1/optimizer/export/{txm_event_id}/{config_id}": {
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Endpoint that exports data from TXM that can be input into optimization module",
                        "schema": {
                            "$ref": "#/definitions/OptimizerRequest"
                        }
                    }
                },
                "operationId": "get_optimize",
                "parameters": [
                    {
                        "name": "txm_event_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Id of txm event chosen"
                    },
                    {
                        "name": "config_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Configuration ID or \"default\".",
                        "default": "default"
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "optimizer"
                ]
            }
        },
        "/v1/public/patient-upload": {
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PatientUploadSuccessResponse"
                        }
                    }
                },
                "description": "This endpoint allows the country editor to upload patient data for given TXM event. TXM event name has to be provided by an ADMIN. You can either add patients to the current dataset or remove all patients from respective country in case there were any. To access this endpoint one has to have credentials to service account and obtain jwt token via the login endpoint.",
                "operationId": "put_txm_event_upload_patients",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UploadPatients"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "public"
                ]
            }
        },
        "/v1/service/status": {
            "get": {
                "responses": {
                    "503": {
                        "description": "It was not possible to reach the SMS gate, thus the one time password could not be send.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Returns ok if the service is healthy.",
                        "schema": {
                            "$ref": "#/definitions/ServiceStatus"
                        }
                    }
                },
                "operationId": "get_status",
                "tags": [
                    "service"
                ]
            }
        },
        "/v1/service/version": {
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Returns version of the code",
                        "schema": {
                            "$ref": "#/definitions/Version"
                        }
                    }
                },
                "operationId": "get_version",
                "tags": [
                    "service"
                ]
            }
        },
        "/v1/user/authentik-login": {
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    }
                },
                "operationId": "get_authentik_login",
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/change-password": {
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Whether the password was changed successfully.",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    }
                },
                "operationId": "put_password_change_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PasswordChange"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/login": {
            "post": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Login successful. JWT generated. User must attach the token to every request in the \"Authorization\" header with the prefix \"Bearer\". Example: \"Authorization: Bearer some_token\", where some_token is the token received in the response.",
                        "schema": {
                            "$ref": "#/definitions/LoginSuccessResponse"
                        }
                    }
                },
                "description": "Endpoint to be used for login of users. Returns JWT. This JWT serves two purposes: in the case of normal accounts it can be used to obtain OTP at the /otp endpoint; in the case of service accounts it can be directly used to access /public/patient-upload endpoint",
                "operationId": "post_login_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserLogin"
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/otp": {
            "post": {
                "responses": {
                    "503": {
                        "description": "It was not possible to reach the SMS gate, thus the one time password could not be send.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "OTP validation was successful. JWT generated.",
                        "schema": {
                            "$ref": "#/definitions/LoginSuccessResponse"
                        }
                    }
                },
                "operationId": "post_otp_login_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OtpLogin"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "user"
                ]
            },
            "put": {
                "responses": {
                    "503": {
                        "description": "It was not possible to reach the SMS gate, thus the one time password could not be send.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Whether the new OTP was generated and sent.",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    }
                },
                "operationId": "put_otp_login_api",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/refresh-token": {
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Token successfully refreshed.",
                        "schema": {
                            "$ref": "#/definitions/LoginSuccessResponse"
                        }
                    }
                },
                "operationId": "get_refresh_token_api",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/register": {
            "post": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Detailed info about the registered user.",
                        "schema": {
                            "$ref": "#/definitions/UserRegistrationOut"
                        }
                    }
                },
                "operationId": "post_registration_api",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserRegistration"
                        }
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/reset-password": {
            "put": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Whether the password reset was successful.",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    }
                },
                "operationId": "put_reset_password",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ResetPassword"
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/v1/user/{email}/reset-password-token": {
            "parameters": [
                {
                    "name": "email",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "500": {
                        "description": "Unexpected error, see contents for details.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied. You do not have rights to access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong data format.",
                        "schema": {
                            "$ref": "#/definitions/FailResponse"
                        }
                    },
                    "200": {
                        "description": "Returns reset token.",
                        "schema": {
                            "$ref": "#/definitions/ResetRequestResponse"
                        }
                    }
                },
                "operationId": "get_request_reset",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        }
    },
    "info": {
        "title": "API",
        "version": "1.0"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "bearer": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization"
        }
    },
    "tags": [
        {
            "name": "public"
        },
        {
            "name": "user"
        },
        {
            "name": "service"
        },
        {
            "name": "optimizer"
        }
    ],
    "definitions": {
        "BloodGroupEnum": {
            "enum": [
                "A",
                "B",
                "AB",
                "0"
            ],
            "type": "string"
        },
        "CountryCode": {
            "enum": [
                "CZE",
                "AUT",
                "ISR",
                "ABW",
                "AFG",
                "AGO",
                "AIA",
                "ALA",
                "ALB",
                "AND",
                "ARE",
                "ARG",
                "ARM",
                "ASM",
                "ATA",
                "ATF",
                "ATG",
                "AUS",
                "AZE",
                "BDI",
                "BEL",
                "BEL_2",
                "BEN",
                "BES",
                "BFA",
                "BGD",
                "BGR",
                "BHR",
                "BHS",
                "BIH",
                "BLM",
                "BLR",
                "BLZ",
                "BMU",
                "BOL",
                "BRA",
                "BRB",
                "BRN",
                "BTN",
                "BVT",
                "BWA",
                "CAF",
                "CAN",
                "CCK",
                "CIV",
                "CMR",
                "COD",
                "COG",
                "COK",
                "COL",
                "COM",
                "CPV",
                "CRI",
                "CUB",
                "CUW",
                "CXR",
                "CYM",
                "CYP",
                "DEU",
                "DJI",
                "DMA",
                "DNK",
                "DOM",
                "DZA",
                "ECU",
                "EGY",
                "ERI",
                "ESH",
                "ESP",
                "EST",
                "ETH",
                "FIN",
                "FJI",
                "FLK",
                "FRA",
                "FRO",
                "FSM",
                "GAB",
                "GBR",
                "GEO",
                "GGY",
                "GHA",
                "GIB",
                "GIN",
                "GLP",
                "GMB",
                "GNB",
                "GNQ",
                "GRC",
                "GRD",
                "GRL",
                "GTM",
                "GUF",
                "GUM",
                "GUY",
                "HKG",
                "HMD",
                "HND",
                "HRV",
                "HTI",
                "HUN",
                "CHE",
                "CHL",
                "CHN",
                "IDN",
                "IMN",
                "IND",
                "IOT",
                "IRL",
                "IRN",
                "IRQ",
                "ISL",
                "ITA",
                "JAM",
                "JEY",
                "JOR",
                "JPN",
                "KAZ",
                "KEN",
                "KGZ",
                "KHM",
                "KIR",
                "KNA",
                "KOR",
                "KWT",
                "LAO",
                "LBN",
                "LBR",
                "LBY",
                "LCA",
                "LIE",
                "LKA",
                "LSO",
                "LTU",
                "LUX",
                "LVA",
                "MAC",
                "MAF",
                "MAR",
                "MCO",
                "MDA",
                "MDG",
                "MDV",
                "MEX",
                "MHL",
                "MKD",
                "MLI",
                "MLT",
                "MMR",
                "MNE",
                "MNG",
                "MNP",
                "MOZ",
                "MRT",
                "MSR",
                "MTQ",
                "MUS",
                "MWI",
                "MYS",
                "MYT",
                "NAM",
                "NCL",
                "NER",
                "NFK",
                "NGA",
                "NIC",
                "NIU",
                "NLD",
                "NOR",
                "NPL",
                "NRU",
                "NZL",
                "OMN",
                "PAK",
                "PAN",
                "PCN",
                "PER",
                "PHL",
                "PLW",
                "PNG",
                "POL",
                "PRI",
                "PRK",
                "PRT",
                "PRY",
                "PSE",
                "PYF",
                "QAT",
                "REU",
                "ROU",
                "RUS",
                "RWA",
                "SAU",
                "SDN",
                "SEN",
                "SGP",
                "SGS",
                "SHN",
                "SJM",
                "SLB",
                "SLE",
                "SLV",
                "SMR",
                "SOM",
                "SPM",
                "SRB",
                "SSD",
                "STP",
                "SUR",
                "SVK",
                "SVN",
                "SWE",
                "SWZ",
                "SXM",
                "SYC",
                "SYR",
                "TCA",
                "TCD",
                "TGO",
                "THA",
                "TJK",
                "TKL",
                "TKM",
                "TLS",
                "TON",
                "TTO",
                "TUN",
                "TUR",
                "TUV",
                "TWN",
                "TZA",
                "UGA",
                "UKR",
                "UMI",
                "URY",
                "USA",
                "UZB",
                "VAT",
                "VCT",
                "VEN",
                "VGB",
                "VIR",
                "VNM",
                "VUT",
                "WLF",
                "WSM",
                "XKX",
                "YEM",
                "ZAF",
                "ZMB",
                "ZWE"
            ],
            "type": "string"
        },
        "CycleOrChain": {
            "required": [
                "patients"
            ],
            "properties": {
                "patients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DonorToRecipient"
                    }
                },
                "scores": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "DonorInput": {
            "required": [
                "blood_group",
                "donor_type",
                "hla_typing",
                "medical_id"
            ],
            "properties": {
                "blood_group": {
                    "$ref": "#/definitions/BloodGroupEnum"
                },
                "sex": {
                    "$ref": "#/definitions/SexEnum"
                },
                "height": {
                    "type": "integer",
                    "description": "Height of the patient in centimeters.",
                    "example": 178
                },
                "weight": {
                    "type": "number",
                    "description": "Weight of the patient in kilograms.",
                    "example": 78.4
                },
                "year_of_birth": {
                    "type": "integer",
                    "description": "Year of birth of the patient.",
                    "example": 1945
                },
                "note": {
                    "type": "string",
                    "default": "",
                    "example": "donor note"
                },
                "medical_id": {
                    "type": "string",
                    "description": "Medical ID of the patient. This ID is unique thorough the system and can be used for the identification of a specific patient in your system. Typically, this is the patient ID used in your internal system.",
                    "example": "D1037"
                },
                "internal_medical_id": {
                    "type": "string",
                    "description": "Custom medical ID that will not be shown in UI, but will be stored and can be seen in patient xlsx export.",
                    "example": "123456"
                },
                "hla_typing": {
                    "type": "array",
                    "description": "HLA typing of the patient. Use high resolution if available.",
                    "example": [
                        "A1",
                        "A32",
                        "B7",
                        "B51",
                        "DR11",
                        "DR15",
                        "A*02:03",
                        "A*11:01:35",
                        "DPA1*01:07",
                        "DRB4*01:01",
                        "DQB1*02:01:01:01"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "donor_type": {
                    "$ref": "#/definitions/DonorType"
                },
                "related_recipient_medical_id": {
                    "type": "string",
                    "description": "Medical ID of the related recipient, empty for bridging and non-directed donors.",
                    "example": "R1037"
                }
            },
            "type": "object"
        },
        "DonorToRecipient": {
            "required": [
                "donor_id",
                "recipient_id",
                "score"
            ],
            "properties": {
                "donor_id": {
                    "type": "integer"
                },
                "recipient_id": {
                    "type": "integer"
                },
                "score": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "DonorType": {
            "enum": [
                "DONOR",
                "BRIDGING_DONOR",
                "NON_DIRECTED"
            ],
            "type": "string",
            "description": "Type of the donor."
        },
        "FailResponse": {
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HLAAntibodyIn": {
            "required": [
                "cutoff",
                "mfi",
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "HLA antibody name in high (A\\*01:01), low (A\\*01), split (A1) or broad (A9) resolutions. In case of DP or DQ, when alpha and beta are provided, the expected format is DQ[01:01,02:02]",
                    "example": "A*01:01"
                },
                "mfi": {
                    "type": "integer",
                    "description": "Mean fluorescence intensity. Use exact value.",
                    "example": 2350
                },
                "cutoff": {
                    "type": "integer",
                    "description": "Default cutoff value for the specific patient and HLA antibody.",
                    "example": 2000
                }
            },
            "type": "object"
        },
        "Limitations": {
            "properties": {
                "max_cycle_length": {
                    "type": "integer",
                    "example": 3
                },
                "max_chain_length": {
                    "type": "integer",
                    "example": 4
                },
                "custom_algorithm_settings": {
                    "type": "object",
                    "example": {
                        "max_number_of_iterations": 200
                    }
                }
            },
            "type": "object"
        },
        "LoginSuccessResponse": {
            "required": [
                "auth_token"
            ],
            "properties": {
                "auth_token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OptimizerConfiguration": {
            "properties": {
                "limitations": {
                    "$ref": "#/definitions/Limitations"
                },
                "scoring": {
                    "type": "array",
                    "example": [
                        [
                            {
                                "transplant_count": 1
                            }
                        ],
                        [
                            {
                                "hla_compatibility_score": 3
                            },
                            {
                                "donor_age_difference": 20
                            }
                        ]
                    ],
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            },
            "type": "object"
        },
        "OptimizerRequest": {
            "required": [
                "compatibility_graph",
                "configuration"
            ],
            "properties": {
                "compatibility_graph": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "example": {
                            "donor_index": 1,
                            "recipient_index": 2,
                            "hla_compatibility_score": 17,
                            "donor_age_difference": 1
                        }
                    }
                },
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pair"
                    }
                },
                "configuration": {
                    "$ref": "#/definitions/OptimizerConfiguration"
                }
            },
            "type": "object"
        },
        "OptimizerReturn": {
            "required": [
                "cycles_and_chains"
            ],
            "properties": {
                "cycles_and_chains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CycleOrChain"
                    }
                },
                "statistics": {
                    "$ref": "#/definitions/Statistics"
                }
            },
            "type": "object"
        },
        "OtpLogin": {
            "required": [
                "otp"
            ],
            "properties": {
                "otp": {
                    "type": "string",
                    "description": "OTP for this login."
                }
            },
            "type": "object"
        },
        "Pair": {
            "required": [
                "donor_id"
            ],
            "properties": {
                "donor_id": {
                    "type": "integer",
                    "example": 1
                },
                "recipient_id": {
                    "type": "integer",
                    "example": 4
                }
            },
            "type": "object"
        },
        "ParsingIssuePublic": {
            "required": [
                "hla_code_or_group",
                "medical_id",
                "message",
                "parsing_issue_detail",
                "txm_event_name"
            ],
            "properties": {
                "hla_code_or_group": {
                    "type": "string"
                },
                "parsing_issue_detail": {
                    "type": "string",
                    "example": "SUCCESSFULLY_PARSED",
                    "enum": [
                        "SUCCESSFULLY_PARSED",
                        "HIGH_RES_WITHOUT_SPLIT",
                        "HIGH_RES_WITH_LETTER",
                        "MULTIPLE_SPLITS_OR_BROADS_FOUND",
                        "IRRELEVANT_CODE",
                        "UNEXPECTED_SPLIT_RES_CODE",
                        "UNKNOWN_TRANSFORMATION_FROM_HIGH_RES",
                        "UNPARSABLE_HLA_CODE",
                        "MORE_THAN_TWO_HLA_CODES_PER_GROUP",
                        "BASIC_HLA_GROUP_IS_EMPTY",
                        "INSUFFICIENT_NUMBER_OF_ANTIBODIES_IN_HIGH_RES",
                        "ALL_ANTIBODIES_ARE_POSITIVE_IN_HIGH_RES",
                        "MULTIPLE_CUTOFFS_PER_ANTIBODY",
                        "MFI_PROBLEM",
                        "OTHER_PROBLEM"
                    ]
                },
                "message": {
                    "type": "string"
                },
                "txm_event_name": {
                    "type": "string"
                },
                "medical_id": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PasswordChange": {
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string",
                    "description": "Current password."
                },
                "new_password": {
                    "type": "string",
                    "description": "New password."
                }
            },
            "type": "object"
        },
        "PatientUploadSuccessResponse": {
            "required": [
                "donors_uploaded",
                "parsing_issues",
                "recipients_uploaded"
            ],
            "properties": {
                "recipients_uploaded": {
                    "type": "integer",
                    "description": "Number of recipients successfully loaded into the application."
                },
                "donors_uploaded": {
                    "type": "integer",
                    "description": "Number of donors successfully loaded into the application."
                },
                "parsing_issues": {
                    "type": "array",
                    "description": "Errors and warnings that occurred in HLA codes parsing",
                    "items": {
                        "$ref": "#/definitions/ParsingIssuePublic"
                    }
                }
            },
            "type": "object"
        },
        "RecipientInput": {
            "required": [
                "blood_group",
                "hla_antibodies",
                "hla_typing",
                "medical_id"
            ],
            "properties": {
                "blood_group": {
                    "$ref": "#/definitions/BloodGroupEnum"
                },
                "sex": {
                    "$ref": "#/definitions/SexEnum"
                },
                "height": {
                    "type": "integer",
                    "description": "Height of the patient in centimeters.",
                    "example": 178
                },
                "weight": {
                    "type": "number",
                    "description": "Weight of the patient in kilograms.",
                    "example": 78.4
                },
                "year_of_birth": {
                    "type": "integer",
                    "description": "Year of birth of the patient.",
                    "example": 1945
                },
                "note": {
                    "type": "string",
                    "default": "",
                    "example": "donor note"
                },
                "medical_id": {
                    "type": "string",
                    "description": "Medical ID of the patient. This ID is unique thorough the system and can be used for the identification of a specific patient in your system. Typically, this is the patient ID used in your internal system.",
                    "example": "D1037"
                },
                "internal_medical_id": {
                    "type": "string",
                    "description": "Custom medical ID that will not be shown in UI, but will be stored and can be seen in patient xlsx export.",
                    "example": "123456"
                },
                "hla_typing": {
                    "type": "array",
                    "description": "HLA typing of the patient. Use high resolution if available.",
                    "example": [
                        "A1",
                        "A32",
                        "B7",
                        "B51",
                        "DR11",
                        "DR15",
                        "A*02:03",
                        "A*11:01:35",
                        "DPA1*01:07",
                        "DRB4*01:01",
                        "DQB1*02:01:01:01"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "acceptable_blood_groups": {
                    "type": "array",
                    "description": "Acceptable blood groups for the patient. Leave empty to use compatible blood groups.",
                    "example": [
                        "A",
                        "0"
                    ],
                    "items": {
                        "$ref": "#/definitions/BloodGroupEnum"
                    }
                },
                "waiting_since": {
                    "type": "string",
                    "format": "date",
                    "description": "Date since when the patient has been on waiting list. Use format YYYY-MM-DD.",
                    "example": "2015-01-17"
                },
                "previous_transplants": {
                    "type": "integer",
                    "description": "Number of previous kidney transplants.",
                    "example": 0
                },
                "hla_antibodies": {
                    "type": "array",
                    "description": "Detected HLA antibodies of the patient. Use high resolution if available. If high resolution is provided it is assumed that all tested antibodies were provided. If not it is assumed that either all or just positive ones were.",
                    "items": {
                        "$ref": "#/definitions/HLAAntibodyIn"
                    }
                }
            },
            "type": "object"
        },
        "ResetPassword": {
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "description": "Reset Token."
                },
                "password": {
                    "type": "string",
                    "description": "New password."
                }
            },
            "type": "object"
        },
        "ResetRequestResponse": {
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ServiceStatus": {
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Indication of service's health.",
                    "example": "OK",
                    "enum": [
                        "OK",
                        "Failing"
                    ]
                },
                "exception": {
                    "type": "string",
                    "description": "Additional indication what is wrong."
                }
            },
            "type": "object"
        },
        "SexEnum": {
            "enum": [
                "M",
                "F"
            ],
            "type": "string",
            "description": "Sex of the patient."
        },
        "Statistics": {
            "required": [
                "number_of_found_cycles",
                "number_of_found_transplants"
            ],
            "properties": {
                "number_of_found_cycles": {
                    "type": "integer"
                },
                "number_of_found_transplants": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Success": {
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "UploadPatients": {
            "required": [
                "country",
                "donors",
                "recipients",
                "txm_event_name"
            ],
            "properties": {
                "country": {
                    "$ref": "#/definitions/CountryCode"
                },
                "txm_event_name": {
                    "type": "string",
                    "description": "The TXM event name has to be provided by an ADMIN.",
                    "example": "2020-10-example_event"
                },
                "donors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DonorInput"
                    }
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecipientInput"
                    }
                },
                "add_to_existing_patients": {
                    "type": "boolean",
                    "description": "If *true* the currently uploaded patients will be added to the patients already in the system. If *false* the data in the system will be overwritten by the currently uploaded data.",
                    "default": false
                }
            },
            "type": "object"
        },
        "UserLogin": {
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email of the user to login."
                },
                "password": {
                    "type": "string",
                    "description": "User's password."
                }
            },
            "type": "object"
        },
        "UserRegistration": {
            "required": [
                "allowed_countries",
                "allowed_txm_events",
                "email",
                "password",
                "require_second_factor",
                "role",
                "second_factor"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email/username used for authentication."
                },
                "password": {
                    "type": "string",
                    "description": "User's password."
                },
                "role": {
                    "type": "string",
                    "description": "User's role.",
                    "example": "ADMIN",
                    "enum": [
                        "ADMIN",
                        "VIEWER",
                        "EDITOR",
                        "SERVICE"
                    ]
                },
                "require_second_factor": {
                    "type": "boolean",
                    "description": "Whether to require second factor for the user",
                    "example": true
                },
                "second_factor": {
                    "type": "string",
                    "description": "2FA: Phone number for user account in standard format (see example), IP address for SERVICE account.",
                    "example": "+420657123987"
                },
                "allowed_countries": {
                    "type": "array",
                    "description": "Countries that the user has access to.",
                    "example": [
                        "AUT",
                        "CZE"
                    ],
                    "items": {
                        "$ref": "#/definitions/CountryCode"
                    }
                },
                "allowed_txm_events": {
                    "type": "array",
                    "description": "Countries that the user has access to.",
                    "example": [
                        "test"
                    ],
                    "items": {
                        "type": "string",
                        "description": "Name of TXM event"
                    }
                }
            },
            "type": "object"
        },
        "UserRegistrationOut": {
            "required": [
                "allowed_countries",
                "allowed_txm_events",
                "email",
                "password_reset_token",
                "password_reset_token_message",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email/username used for authentication."
                },
                "role": {
                    "type": "string",
                    "description": "User's role.",
                    "example": "ADMIN",
                    "enum": [
                        "ADMIN",
                        "VIEWER",
                        "EDITOR",
                        "SERVICE"
                    ]
                },
                "allowed_countries": {
                    "type": "array",
                    "description": "Countries that the user has access to.",
                    "example": [
                        "AUT",
                        "CZE"
                    ],
                    "items": {
                        "$ref": "#/definitions/CountryCode"
                    }
                },
                "allowed_txm_events": {
                    "type": "array",
                    "description": "Countries that the user has access to.",
                    "example": [
                        "test"
                    ],
                    "items": {
                        "type": "string",
                        "description": "Name of TXM event"
                    }
                },
                "password_reset_token": {
                    "type": "string",
                    "description": "token to reset password",
                    "example": "long_string_token"
                },
                "password_reset_token_message": {
                    "type": "string",
                    "description": "detailed description how to reset password including url",
                    "example": "To reset password go tu url: www.reset.password/token"
                }
            },
            "type": "object"
        },
        "Version": {
            "required": [
                "colour_scheme",
                "environment",
                "version"
            ],
            "properties": {
                "version": {
                    "type": "string",
                    "description": "Version of the running code."
                },
                "colour_scheme": {
                    "type": "string",
                    "description": "Colour scheme to use.",
                    "example": "IKEM",
                    "enum": [
                        "IKEM",
                        "MILD_BLUE"
                    ]
                },
                "environment": {
                    "type": "string",
                    "description": "Environment the code was build for.",
                    "example": "PRODUCTION",
                    "enum": [
                        "PRODUCTION",
                        "STAGING",
                        "DEVELOPMENT"
                    ]
                }
            },
            "type": "object"
        }
    }
}