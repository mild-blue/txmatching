name: Check Pipeline

on:
  # manual dispatch
  workflow_dispatch:
  # run on PRs to master when - is opened,
  # new commit is pushed or is set as ready for review
  pull_request:
    types: [opened, synchronize, ready_for_review]
    branches:
      - master

jobs:
  run_tests:
    runs-on: ubuntu-latest
    container:
      # use our base container
      # note that when a new dependency is added,
      # the image must be rebuild and published again
      image: mildblue/txmatching-conda-dependencies:1.0.5
    timeout-minutes: 10
    # disable run if the PR is draft (as our CLI creates PR as draft once the issue is in progress)
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v2

      # verify that the conda.yaml (dependencies file) in the repository
      # is the same as the one used in the docker image
      # if this step fails, update the base docker image and push it
      - name: Verify Conda consistency
        run: |
          diff -f conda.yml /app/conda.yml

        # initialize conda binary, conda env must be
        # activated in each step again
      - name: Setup Conda
        # define that we want to use bash
        # which is then reused
        shell: bash
        run: |
          conda --version
          conda env
          conda list
          conda init bash
          source ~/.bashrc

      - name: Verify Conda installation
        # use already existing instance of shell
        shell: bash -l {0}
        run: |
          conda activate txmatching
          conda list

      - name: Run Linter
        shell: bash -l {0}
        # conda activate txmatching must be called again in order to
        # activate it for the step
        run: |
          conda activate txmatching
          pylint txmatching

      - name: Execute tests
        shell: bash -l {0}
        run: |
          conda activate txmatching
          cd tests
          export PYTHONPATH=../
          python -m unittest discover -s . -t .
